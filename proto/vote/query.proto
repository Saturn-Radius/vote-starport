syntax = "proto3";
package cosmonaut.vote.vote;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "vote/params.proto";
import "vote/vote.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/cosmonaut/vote/x/vote/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmonaut/vote/vote/params";
  }
  // Queries a list of Voteresult items.
	rpc Voteresult(QueryVoteresultRequest) returns (QueryVoteresultResponse) {
		option (google.api.http).get = "/cosmonaut/vote/vote/voteresult";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryVoteresultRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;

}

message QueryVoteresultResponse {
  repeated Vote Votes = 1;
}

// this line is used by starport scaffolding # 3
